-# This is a hidden form that helps with user management:
= form_tag(collection_add_user_path(@collection), method: "post", remote: true, class: "find_users_form") do
  = hidden_field_tag("user_id", "0")
-# This is the main form:
= form_for(@collection) do |f|
  .uk-section.uk-grid{ uk: { grid: true } }
    .uk-width-3-4
      .uk-fieldset
        = label_tag(:name, nil, class: "uk-form-label")
        = f.text_field :name, class: "uk-input"
      .uk-fieldset.uk-margin
        = label_tag(:description, nil, class: "uk-form-label")
        %br/
        = f.text_area(:description, cols: "80", rows: "6", class: "uk-input")
      .uk-fieldset.uk-margin.uk-grid{ uk: { grid: true } }
        -# TODO: extract method for these lists...
        = label_tag(:collection_type, nil, class: "uk-form-label")
        .uk-form-controls
          - Collection.collection_types.each do |name, num|
            %label
              %input{ type: "radio", value: name, name: "collection[collection_type]", id: "collection_collection_type_#{name}", checked: @collection.collection_type == name }
              = I18n.t("collection.collection_type.#{name}")
              %br
      .uk-fieldset.uk-margin.uk-grid{ uk: { grid: true } }
        = label_tag(:default_sort, nil, class: "uk-form-label")
        .uk-form-controls
          - Collection.default_sorts.each do |name, num|
            %label
              %input{ type: "radio", value: name, name: "collection[default_sort]", id: "collection_default_sort_#{name}", checked: @collection.default_sort == name }
              = I18n.t("collection.sort.#{name}")
              %br
    - if policy(@collection).update?
      .uk-width-1-4.actions
        = f.submit(class: "ui button")
        %br/
        = link_to t(:cancel), collection_path(@collection), class: "ui basic button"

  .uk-section
    %h3.uk-title= t("collection.admins.header")
    %ul.uk-list.collection_users
      - @collection.users.each do |user|
        %li{ id: "user_#{user.id}" }
          = link_to(user.username, user)
          - unless user == current_user
            = remove_collection_user_link(@collection, user)
    .find_users.uk-margin-top
      - hide_params_in_form(["user_id"])
      %div
        = t("collection.admins.label")
      %div
        = text_field_tag("user", nil,
          placeholder: t("collection.admins.placeholder"),
          remote: true, class: "uk-input uk-form-width-medium typeahead")

  - if @pages.empty?
    %p= t(:collection_pages_empty)
  - else
    %h2= t(:collected_pages_title)
    %ul.uk-list
      - @pages.each do |collected_page|
        = render("collected_pages/edit", collected_page: collected_page, form: f)
  %p.col-md-3.actions.col-md-offset-2
    = f.submit(class: "ui button")
  %p.col-md-3.actions
    = link_to t(:cancel), collection_path(@collection), class: "ui basic button"
