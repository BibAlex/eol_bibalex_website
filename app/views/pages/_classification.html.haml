.row
  .col-md-12
-nodes = @page.nodes.to_a.sort_by{|n| n.resource_id}
- if params[:locale] == "ar"
  -direction = "right"
- else
  -direction ="left"
#test.tree
  -nodes.each do |page_node|
    -tree = classification(page_node)
    -children = classification_children(page_node)
    -resource_info = get_resource_info(page_node.resource_id)
    - if !resource_info.nil?
      %span
        = resource_info.name
    -else
      %span #{t(:unknown_resource)} 
    - x = 0 
    -tree.each_with_index do |node, index|
      %ul.treeNode{ style: "padding-#{direction}: #{x}px;"}
        %li.parent_li
          - unless node.nil?
            %ul
              - x = x + 5
              %li.parent_li
                -if index == tree.size - 1
                  %b
                    -unless node.pages.empty?
                      %a{href:  "/pages/#{node.pages.first.id}"} 
                        =node.scientific_name
                    -else
                      =node.scientific_name 
                  #{t(:this_page)}
                -else 
                  -unless node.pages.empty?
                    %a{href:  "/pages/#{node.pages.first.id}"} 
                      =node.scientific_name
                  -else
                    =node.scientific_name 
                    
            %ul
    - level = -1
    -children.each do |child|
      -prev_level = level
      -node = child[0]
      -level = child[1]
      -if prev_level == level
        -x = x - 5
      %ul.treeNode{ style: "padding-#{direction}: #{x}px;"}
        %li.parent_li
          - unless node.nil?
            %ul
              - x = x + 5
              %li.parent_li
                -unless node.pages.empty?
                  %a{href:  "/pages/#{node.pages.first.id}"} 
                    =node.scientific_name
                -else
                  =node.scientific_name 
            %ul
    %br
